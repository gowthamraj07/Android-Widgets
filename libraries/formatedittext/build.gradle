apply plugin: 'com.android.library'
apply plugin: 'com.vanniktech.maven.publish'

// Versioning from git tags
def getVersionCode = { ->
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'tag', '--list'
            standardOutput = code
        }
        return code.toString().split("\n").size()
    } catch (ignored) {
        return -1
    }
}

def getVersionNameWithoutV = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--dirty'
            standardOutput = stdout
        }
        return stdout.toString().split('-')[0].trim().substring(1)
    } catch (ignored) {
        return null
    }
}

android {
    compileSdk=35
    defaultConfig {
        minSdk 15
        targetSdk 35
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    namespace 'com.androidwidgets.formatedittext'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // AndroidX and Google Material
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'pl.pragmatists:JUnitParams:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

// Set version for publishing
version = getVersionNameWithoutV()

mavenPublishing {
    publishToMavenCentral()
    signAllPublications()
}